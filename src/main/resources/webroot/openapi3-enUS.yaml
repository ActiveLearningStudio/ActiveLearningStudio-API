openapi: 3.0.0
info:
  title: ""
  version: 3.0.0
paths:

  /callback:
    get:
      operationId: callback
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-callback
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /logout:
    get:
      operationId: logout
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-logout
      description: >+
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                type: string

  /api/user:
    get:
      operationId: searchSiteUser
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: cursorMark
          description: 'To use a cursor with the API, specify a cursorMark parameter with the value of *. In addition to returning the top N sorted results (where you can control N using the rows parameter) the API response will also include an encoded String named nextCursorMark. You then take the nextCursorMark String value from the response, and pass it back to API as the cursorMark parameter for your next request. You can repeat this process until you’ve fetched as many docs as you want, or until the nextCursorMark returned matches the cursorMark you’ve already specified — indicating that there are no more results. '
          required: false
          schema:
            type: string
        - in: query
          name: softCommit
          description: 'Solr performs a soft commit, meaning that Solr will commit the changes to the data structures quickly, but not guarantee that the Lucene index files are written to stable storage. '
          required: false
          schema:
            type: boolean
        - in: query
          name: commitWithin
          description: 'The commit within setting allows forcing document commits to happen in a defined time period. '
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchSiteUserResponse'
    patch:
      operationId: patchSiteUser
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: cursorMark
          description: 'To use a cursor with the API, specify a cursorMark parameter with the value of *. In addition to returning the top N sorted results (where you can control N using the rows parameter) the API response will also include an encoded String named nextCursorMark. You then take the nextCursorMark String value from the response, and pass it back to API as the cursorMark parameter for your next request. You can repeat this process until you’ve fetched as many docs as you want, or until the nextCursorMark returned matches the cursorMark you’ve already specified — indicating that there are no more results. '
          required: false
          schema:
            type: string
        - in: query
          name: softCommit
          description: 'Solr performs a soft commit, meaning that Solr will commit the changes to the data structures quickly, but not guarantee that the Lucene index files are written to stable storage. '
          required: false
          schema:
            type: boolean
        - in: query
          name: commitWithin
          description: 'The commit within setting allows forcing document commits to happen in a defined time period. '
          required: false
          schema:
            type: integer
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PATCHSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/PATCHSiteUserResponse'
    post:
      operationId: postSiteUser
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      requestBody:
        description: >+
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/POSTSiteUserRequest'
      responses:
        '200':
          description: >+
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/POSTSiteUserResponse'
  /user:
    get:
      operationId: searchpageSiteUser
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: cursorMark
          description: 'To use a cursor with the API, specify a cursorMark parameter with the value of *. In addition to returning the top N sorted results (where you can control N using the rows parameter) the API response will also include an encoded String named nextCursorMark. You then take the nextCursorMark String value from the response, and pass it back to API as the cursorMark parameter for your next request. You can repeat this process until you’ve fetched as many docs as you want, or until the nextCursorMark returned matches the cursorMark you’ve already specified — indicating that there are no more results. '
          required: false
          schema:
            type: string
        - in: query
          name: softCommit
          description: 'Solr performs a soft commit, meaning that Solr will commit the changes to the data structures quickly, but not guarantee that the Lucene index files are written to stable storage. '
          required: false
          schema:
            type: boolean
        - in: query
          name: commitWithin
          description: 'The commit within setting allows forcing document commits to happen in a defined time period. '
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
  /user/{id}:
    get:
      operationId: searchpageSiteUserId
      x-vertx-event-bus: ActiveLearningStudio-API-enUS-SiteUser
      security:
        - openIdConnect:
          - DefaultAuthScope
      description: >+
      summary: >+
      tags:
        - User
      parameters:
        - name: vertx-web.session
          in: cookie
          schema:
            type: string
        - name: sessionIdBefore
          in: cookie
          schema:
            type: string
        - name: id
          in: path
          description: >+
          required: true
          schema:
            type: string
        - in: query
          name: q
          description: ''
          required: false
          schema:
            type: string
            default: '*:*'
        - in: query
          name: fq
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: fl
          description: ''
          required: false
          schema:
            type: string
        - in: query
          name: sort
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: start
          description: ''
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - in: query
          name: rows
          description: ''
          required: false
          schema:
            type: integer
            default: 10
            minimum: 0
        - in: query
          name: var
          description: ''
          required: false
          schema:
            type: array
            items:
                type: string
        - in: query
          name: facet
          description: ''
          required: false
          schema:
            type: array
            items:
              type: boolean
        - in: query
          name: facet.range.start
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.end
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range.gap
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.pivot
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.range
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: facet.field
          description: ''
          required: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: cursorMark
          description: 'To use a cursor with the API, specify a cursorMark parameter with the value of *. In addition to returning the top N sorted results (where you can control N using the rows parameter) the API response will also include an encoded String named nextCursorMark. You then take the nextCursorMark String value from the response, and pass it back to API as the cursorMark parameter for your next request. You can repeat this process until you’ve fetched as many docs as you want, or until the nextCursorMark returned matches the cursorMark you’ve already specified — indicating that there are no more results. '
          required: false
          schema:
            type: string
        - in: query
          name: softCommit
          description: 'Solr performs a soft commit, meaning that Solr will commit the changes to the data structures quickly, but not guarantee that the Lucene index files are written to stable storage. '
          required: false
          schema:
            type: boolean
        - in: query
          name: commitWithin
          description: 'The commit within setting allows forcing document commits to happen in a defined time period. '
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: >+
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/SearchPageSiteUserResponse'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://sso.computate.org/auth/realms/TEAM19/.well-known/openid-configuration
  requestBodies:
    SearchSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchSiteUserResponse'
    PATCHSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserRequest'
    PATCHSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/PATCHSiteUserResponse'
    POSTSiteUserRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/POSTSiteUserRequest'
    POSTSiteUserResponse:
      content:
        application/json; charset=utf-8:
          schema:
            $ref: '#/components/schemas/POSTSiteUserResponse'
    SearchPageSiteUserResponse:
      content:
        text/html; charset=utf-8:
          schema:
            $ref: '#/components/schemas/SearchPageSiteUserResponse'
  schemas:
    SearchSiteUserResponse:
      allOf:
        - type: array
          items:
            type: object
            properties:
              userKeys:
                type: array
                items:
                  type: string
              userId:
                type: string
              userName:
                type: string
              userEmail:
                type: string
              userFirstName:
                type: string
              userLastName:
                type: string
              userFullName:
                type: string
    PATCHSiteUserRequest:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
    PATCHSiteUserResponse:
      allOf:
        - type: object
          properties:
            setUserKeys:
              type: array
              nullable: true
              items:
                type: string
            removeUserKeys:
              type: string
            removeAllUserKeys:
              type: array
              items:
                type: string
            addUserKeys:
              type: string
            addAllUserKeys:
              type: array
              items:
                type: string
            setUserId:
              type: string
              nullable: true
            removeUserId:
              type: string
            removeAllUserId:
              type: string
            setUserName:
              type: string
              nullable: true
            removeUserName:
              type: string
            removeAllUserName:
              type: string
            setUserEmail:
              type: string
              nullable: true
            removeUserEmail:
              type: string
            removeAllUserEmail:
              type: string
            setUserFirstName:
              type: string
              nullable: true
            removeUserFirstName:
              type: string
            removeAllUserFirstName:
              type: string
            setUserLastName:
              type: string
              nullable: true
            removeUserLastName:
              type: string
            removeAllUserLastName:
              type: string
            setUserFullName:
              type: string
              nullable: true
            removeUserFullName:
              type: string
            removeAllUserFullName:
              type: string
    POSTSiteUserRequest:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
    POSTSiteUserResponse:
      allOf:
        - type: object
          properties:
            userKeys:
              type: array
              items:
                type: string
            userId:
              type: string
            userName:
              type: string
            userEmail:
              type: string
            userFirstName:
              type: string
            userLastName:
              type: string
            userFullName:
              type: string
    SearchPageSiteUserResponse:
      allOf:
        - type: string
