name: '19. Suborganization API'
description: |-

  APIs for Suborganization
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/user-has-permission'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'User has permission'
      description: 'Check if user has the specified permission in the provided organization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      permission:
        name: permission
        description: 'Permission to check user access'
        required: true
        example: 'organization:view'
        type: string
        custom: []
    cleanBodyParameters:
      permission: 'organization:view'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "userHasPermission": true
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "permission": [
                "The permission field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/permissions'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get User Permissions'
      description: "Get the logged-in user's permissions in the suborganization."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "permissions": {
                  "activeRole": "non_editing_teacher",
                  "roleId": 4,
                  "Project": [
                      "project:view"
                  ],
                  "Playlist": [
                      "playlist:view"
                  ],
                  "Activity": [
                      "activity:view"
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/default-permissions'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get Default Permissions'
      description: 'Get the all default permissions in the suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "permissions": {
                  "activeRole": "non_editing_teacher",
                  "roleId": 4,
                  "Project": [
                      "project:view"
                  ],
                  "Playlist": [
                      "playlist:view"
                  ],
                  "Activity": [
                      "activity:view"
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/add-role'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Add Suborganization Role'
      description: 'Add role for the specified suborganization'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of a suborganization role'
        required: true
        example: member
        type: string
        custom: []
      display_name:
        name: display_name
        description: 'Display name of a suborganization role'
        required: true
        example: Member
        type: string
        custom: []
      permissions:
        name: permissions
        description: 'Ids of the permissions to assign the role'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      name: member
      display_name: Member
      permissions:
        - 1
        - 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role has been added successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to add role."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/add-role-ui-permissions'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Add Suborganization Role With UI Permissions'
      description: 'Add role for the specified suborganization with UI permissions'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of a suborganization role'
        required: true
        example: member
        type: string
        custom: []
      display_name:
        name: display_name
        description: 'Display name of a suborganization role'
        required: true
        example: Member
        type: string
        custom: []
      permissions:
        name: permissions
        description: 'Ids of the permissions to assign the role'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      name: member
      display_name: Member
      permissions:
        - 1
        - 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role has been added successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to add role."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/suborganizations/{suborganization_id}/update-role'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Update Suborganization Role'
      description: 'Update role for the specified suborganization'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      role_id:
        name: role_id
        description: 'Id of a suborganization role'
        required: true
        example: 1
        type: integer
        custom: []
      permissions:
        name: permissions
        description: 'Ids of the permissions to assign the role'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      role_id: 1
      permissions:
        - 1
        - 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Role has been updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to update role."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/suborganizations/visibility-types
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get Visibility Types For Suborganization'
      description: 'Get a list of the visibility types for suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "name": "private",
                      "display_name": "Private"
                  },
                  {
                      "id": 2,
                      "name": "protected",
                      "display_name": "Protected"
                  },
                  {
                      "id": 3,
                      "name": "global",
                      "display_name": "Global"
                  },
                  {
                      "id": 4,
                      "name": "public",
                      "display_name": "Public"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/roles'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get User Roles For Suborganization'
      description: 'Get a list of the users roles for suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "name": "admin",
                      "display_name": "Administrator"
                  },
                  {
                      "id": 3,
                      "name": "member",
                      "display_name": "Member"
                  },
                  {
                      "id": 2,
                      "name": "course_creator",
                      "display_name": "Course Creator"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/role/{roleId}'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get User Role detail For Suborganization'
      description: 'Get detail of the user role for suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      roleId:
        name: roleId
        description: ''
        required: true
        example: laborum
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      roleId: laborum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 1,
                      "name": "admin",
                      "display_name": "Administrator"
                  },
                  {
                      "id": 3,
                      "name": "member",
                      "display_name": "Member"
                  },
                  {
                      "id": 2,
                      "name": "course_creator",
                      "display_name": "Course Creator"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/role/{role_id}/permissions'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get User Role UI Permissions For Suborganization'
      description: 'Get detail of the user role UI permissions for suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      role_id:
        name: role_id
        description: 'The ID of the role.'
        required: true
        example: 77
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      role:
        name: role
        description: 'The Id of an organization role'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      role_id: 77
      suborganization: '1'
      role: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "title": "Organiziations",
                      "ui_sub_modules": [
                          {
                              "title": "Organiziation",
                              "ui_module_permissions": [
                                  {
                                      "id": 1,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 2,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 3,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "title": "Projects",
                      "ui_sub_modules": [
                          {
                              "title": "All Projects",
                              "ui_module_permissions": [
                                  {
                                      "id": 4,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 5,
                                      "title": "Edit",
                                      "selected": true
                                  },
                                  {
                                      "id": 6,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Import/Export Projects",
                              "ui_module_permissions": [
                                  {
                                      "id": 7,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 8,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 9,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "title": "Ref. Tables",
                      "ui_sub_modules": [
                          {
                              "title": "Activity Types",
                              "ui_module_permissions": [
                                  {
                                      "id": 10,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 11,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 12,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Activity Items",
                              "ui_module_permissions": [
                                  {
                                      "id": 13,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 14,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 15,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "title": "Integrations",
                      "ui_sub_modules": [
                          {
                              "title": "LMS Settings",
                              "ui_module_permissions": [
                                  {
                                      "id": 16,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 17,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 18,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "LTI Tools",
                              "ui_module_permissions": [
                                  {
                                      "id": 19,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 20,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 21,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "BrightCove",
                              "ui_module_permissions": [
                                  {
                                      "id": 22,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 23,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 24,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "title": "Users",
                      "ui_sub_modules": [
                          {
                              "title": "Manage Users",
                              "ui_module_permissions": [
                                  {
                                      "id": 25,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 26,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 27,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Manage Roles",
                              "ui_module_permissions": [
                                  {
                                      "id": 28,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 29,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 30,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "title": "Independent Activities",
                      "ui_sub_modules": [
                          {
                              "title": "All Independent Activities",
                              "ui_module_permissions": [
                                  {
                                      "id": 31,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 32,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 33,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Export/Import Activities",
                              "ui_module_permissions": [
                                  {
                                      "id": 34,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 35,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 36,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "title": "Authoring",
                      "ui_sub_modules": [
                          {
                              "title": "Project",
                              "ui_module_permissions": [
                                  {
                                      "id": 37,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 38,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 39,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Playlist",
                              "ui_module_permissions": [
                                  {
                                      "id": 40,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 41,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 42,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Activity",
                              "ui_module_permissions": [
                                  {
                                      "id": 43,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 44,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 45,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Team",
                              "ui_module_permissions": [
                                  {
                                      "id": 46,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 47,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 48,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "Independent Activity",
                              "ui_module_permissions": [
                                  {
                                      "id": 49,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 50,
                                      "title": "Edit",
                                      "selected": false
                                  },
                                  {
                                      "id": 51,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          },
                          {
                              "title": "My Interactive Video",
                              "ui_module_permissions": [
                                  {
                                      "id": 52,
                                      "title": "View",
                                      "selected": false
                                  },
                                  {
                                      "id": 53,
                                      "title": "None",
                                      "selected": false
                                  }
                              ]
                          }
                      ]
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/upload-thumb'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Upload thumbnail'
      description: 'Upload thumbnail image for a suborganization'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      thumb:
        name: thumb
        description: 'Thumbnail image to upload'
        required: true
        example: (binary)
        type: image
        custom: []
    cleanBodyParameters:
      thumb: (binary)
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "thumbUrl": "/storage/organizations/1fqwe2f65ewf465qwe46weef5w5eqwq.png"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid image."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/upload-favicon'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Upload Favicon'
      description: 'Upload favicon for a suborganization'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      favicon:
        name: favicon
        description: 'image to upload'
        required: false
        example: (binary)
        type: required
        custom: []
    cleanBodyParameters:
      favicon: (binary)
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "faviconUrl": "/storage/organizations/favicon/1fqwe2f65ewf465qwe46weef5w5eqwq.png"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid favicon."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/member-options'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Show Member Options'
      description: 'Display a listing of the user member options for suborganization, other then the exiting ones.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Query to search users against'
        required: true
        example: leo
        type: string
        custom: []
      page:
        name: page
        description: 'Must be one of <code>create</code> or <code>update</code>.'
        required: true
        example: update
        type: string
        custom: []
    cleanBodyParameters:
      query: leo
      page: update
    fileParameters: []
    responses:
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "query": [
                "The query field is required."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "member-options": [
                  {
                      "id": 3,
                      "first_name": "Abby",
                      "last_name": "_",
                      "email": "abby@curriki.org",
                      "organization_name": "",
                      "organization_type": null,
                      "job_title": "",
                      "address": null,
                      "phone_number": null,
                      "website": null,
                      "subscribed": true
                  },
                  {
                      "id": 1494,
                      "first_name": "Gabriella",
                      "last_name": "Tennant-Nicholas",
                      "email": "gabbytennant05@gmail.com",
                      "organization_name": "Arizona State University",
                      "organization_type": null,
                      "job_title": "Student",
                      "address": null,
                      "phone_number": null,
                      "website": null,
                      "subscribed": true
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/add-user'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Add Suborganization User'
      description: 'Add user for the specified role in suborganization'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'Id of the user to be added'
        required: true
        example: 1
        type: integer
        custom: []
      role_id:
        name: role_id
        description: 'Id of the role for added user'
        required: true
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      user_id: 1
      role_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User has been added successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to add user."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/invite-members'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Invite Organization Member'
      description: 'Invite a member to the organization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of the user'
        required: true
        example: abby@curriki.org
        type: string
        custom: []
      note:
        name: note
        description: 'The note for the user'
        required: false
        example: Welcome
        type: string
        custom: []
      role_id:
        name: role_id
        description: 'Id of the role for invited user'
        required: true
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      email: abby@curriki.org
      note: Welcome
      role_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User have been invited to the organization successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to invite user to the organization."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganizations/{suborganization_id}/update-class-credentails'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Update Google/Microsoft Credentials in Suborganization'
      description: 'Update the specified suborganization for a user to modify classroom access credentials.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      gcr_project_visibility:
        name: gcr_project_visibility
        description: 'Enable/disable google classroom'
        required: false
        example: false
        type: boolean
        custom: []
      gcr_playlist_visibility:
        name: gcr_playlist_visibility
        description: 'Enable/disable google classroom'
        required: false
        example: false
        type: boolean
        custom: []
      gcr_activity_visibility:
        name: gcr_activity_visibility
        description: 'Enable/disable google classroom'
        required: false
        example: false
        type: boolean
        custom: []
      msteam_client_id:
        name: msteam_client_id
        description: 'Client id'
        required: false
        example: 123e4567-e89b-12d3-a456-426614174000
        type: uuid
        custom: []
      msteam_secret_id:
        name: msteam_secret_id
        description: 'Secret id'
        required: false
        example: 123e4567-e89b-12d3-a456-426614174000
        type: uuid
        custom: []
      msteam_tenant_id:
        name: msteam_tenant_id
        description: 'Tenant id'
        required: false
        example: 123e4567-e89b-12d3-a456-426614174000
        type: uuid
        custom: []
      msteam_secret_id_expiry:
        name: msteam_secret_id_expiry
        description: 'Secret expiry date'
        required: false
        example: '2022-09-29'
        type: date
        custom: []
      msteam_project_visibility:
        name: msteam_project_visibility
        description: 'Enable/disable google classroom'
        required: false
        example: false
        type: boolean
        custom: []
      msteam_playlist_visibility:
        name: msteam_playlist_visibility
        description: 'Enable/disable google classroom'
        required: false
        example: false
        type: boolean
        custom: []
      msteam_activity_visibility:
        name: msteam_activity_visibility
        description: 'Enable/disable google classroom'
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      gcr_project_visibility: false
      gcr_playlist_visibility: false
      gcr_activity_visibility: false
      msteam_client_id: 123e4567-e89b-12d3-a456-426614174000
      msteam_secret_id: 123e4567-e89b-12d3-a456-426614174000
      msteam_tenant_id: 123e4567-e89b-12d3-a456-426614174000
      msteam_secret_id_expiry: '2022-09-29'
      msteam_project_visibility: false
      msteam_playlist_visibility: false
      msteam_activity_visibility: false
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "success": [
              "Fields are updated successfully."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to update suborganization."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/suborganizations/{suborganization_id}/update-user'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Update Suborganization User'
      description: 'Update user for the specified role in default suborganization'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'Id of the user to be updated'
        required: true
        example: 1
        type: integer
        custom: []
      role_id:
        name: role_id
        description: 'Id of the role for updated user'
        required: true
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      user_id: 1
      role_id: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "User has been updated successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to update user."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/suborganizations
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Create Suborganization'
      description: "Create a new suborganization for a user's default organization."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of a suborganization'
        required: true
        example: 'Old Campus'
        type: string
        custom: []
      description:
        name: description
        description: 'Description of a suborganization'
        required: true
        example: 'This is a test suborganization.'
        type: string
        custom: []
      domain:
        name: domain
        description: 'Domain of a suborganization'
        required: true
        example: oldcampus
        type: string
        custom: []
      image:
        name: image
        description: 'Image path of a suborganization'
        required: true
        example: /storage/organizations/jlvKGDV1XjzIzfNrm1Py8gqgVkHpENwLoQj6OMjV.jpeg
        type: string
        custom: []
      favicon:
        name: favicon
        description: 'Favicon path of a suborganization'
        required: false
        example: /storage/organizations/favicon/jlvKGDV1XjzIzfNrm1PyNwLoQj6OMjV.jpeg
        type: string
        custom: []
      admins:
        name: admins
        description: 'Ids of the suborganization admin users'
        required: true
        example:
          - 1
          - 2
        type: 'string[]'
        custom: []
      visibility_type_id:
        name: visibility_type_id
        description: 'Array of the allowed visibility_type_id for the organization'
        required: true
        example:
          - 1
          - 2
          - 3
          - 4
        type: 'string[]'
        custom: []
      users:
        name: users
        description: 'Array of the "user_id" and "role_id" for suborganization users'
        required: true
        example:
          - aliquam
        type: 'string[]'
        custom: []
      parent_id:
        name: parent_id
        description: 'Id of the parent organization'
        required: true
        example: 1
        type: integer
        custom: []
      self_registration:
        name: self_registration
        description: 'Enable/disable user self registration'
        required: false
        example: false
        type: boolean
        custom: []
      account_id:
        name: account_id
        description: 'Must not be greater than 255 characters.'
        required: false
        example: kioroxxsdoyltyjbmu
        type: string
        custom: []
      api_key:
        name: api_key
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fi
        type: string
        custom: []
      unit_path:
        name: unit_path
        description: 'Must not be greater than 255 characters.'
        required: false
        example: vphi
        type: string
        custom: []
      noovo_client_id:
        name: noovo_client_id
        description: 'Id of the noovo cms'
        required: false
        example: oldcampus
        type: string
        custom: []
      tos_type:
        name: tos_type
        description: 'Must be one of <code>Parent</code>, <code>URL</code>, or <code>Content</code>.'
        required: true
        example: URL
        type: string
        custom: []
      tos_url:
        name: tos_url
        description: 'This field is required when <code>tos_type</code> is <code>==</code> or <code>URL</code>.  Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: 'http://www.harris.com/ducimus-possimus-illo-officia'
        type: string
        custom: []
      tos_content:
        name: tos_content
        description: 'This field is required when <code>tos_type</code> is <code>==</code> or <code>Content</code>. Must not be greater than 65000 characters.'
        required: false
        example: abb
        type: string
        custom: []
      privacy_policy_type:
        name: privacy_policy_type
        description: 'Must be one of <code>Parent</code>, <code>URL</code>, or <code>Content</code>.'
        required: true
        example: Parent
        type: string
        custom: []
      privacy_policy_url:
        name: privacy_policy_url
        description: 'This field is required when <code>privacy_policy_type</code> is <code>==</code> or <code>URL</code>.  Must be a valid URL. Must not be greater than 255 characters.'
        required: false
        example: 'http://www.stiedemann.com/eum-minima-ipsum-porro-veritatis-nobis-et-excepturi.html'
        type: string
        custom: []
      privacy_policy_content:
        name: privacy_policy_content
        description: 'This field is required when <code>privacy_policy_type</code> is <code>==</code> or <code>Content</code>. Must not be greater than 65000 characters.'
        required: false
        example: k
        type: string
        custom: []
      primary_color:
        name: primary_color
        description: 'Primary font color'
        required: false
        example: '#515151'
        type: string
        custom: []
      secondary_color:
        name: secondary_color
        description: 'Primary font color'
        required: false
        example: '#515151'
        type: string
        custom: []
      tertiary_color:
        name: tertiary_color
        description: 'Primary font color'
        required: false
        example: '#515151'
        type: string
        custom: []
      primary_font_family:
        name: primary_font_family
        description: 'Primary font color'
        required: false
        example: 'Open Sans'
        type: string
        custom: []
      secondary_font_family:
        name: secondary_font_family
        description: 'Primary font color'
        required: false
        example: 'Open Sans'
        type: string
        custom: []
      auto_approve:
        name: auto_approve
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      activity_title_text:
        name: activity_title_text
        description: 'Must not be greater than 255 characters.'
        required: false
        example: nyrdqkgqfmmcfsriqcqqlbfqf
        type: string
        custom: []
      activity_title_placeholder:
        name: activity_title_placeholder
        description: 'Must not be greater than 255 characters.'
        required: false
        example: fzebpoe
        type: string
        custom: []
      h5p_embed_option:
        name: h5p_embed_option
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      h5p_reuse_option:
        name: h5p_reuse_option
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      'users[].user_id':
        name: 'users[].user_id'
        description: 'This field is required when <code>users.*.role_id</code> is present.'
        required: false
        example: 20
        type: integer
        custom: []
      'users[].role_id':
        name: 'users[].role_id'
        description: 'This field is required when <code>users.*.user_id</code> is present.'
        required: false
        example: 2
        type: integer
        custom: []
    cleanBodyParameters:
      name: 'Old Campus'
      description: 'This is a test suborganization.'
      domain: oldcampus
      image: /storage/organizations/jlvKGDV1XjzIzfNrm1Py8gqgVkHpENwLoQj6OMjV.jpeg
      favicon: /storage/organizations/favicon/jlvKGDV1XjzIzfNrm1PyNwLoQj6OMjV.jpeg
      admins:
        - 1
        - 2
      visibility_type_id:
        - 1
        - 2
        - 3
        - 4
      users:
        - aliquam
      parent_id: 1
      self_registration: false
      account_id: kioroxxsdoyltyjbmu
      api_key: fi
      unit_path: vphi
      noovo_client_id: oldcampus
      tos_type: URL
      tos_url: 'http://www.harris.com/ducimus-possimus-illo-officia'
      tos_content: abb
      privacy_policy_type: Parent
      privacy_policy_url: 'http://www.stiedemann.com/eum-minima-ipsum-porro-veritatis-nobis-et-excepturi.html'
      privacy_policy_content: k
      primary_color: '#515151'
      secondary_color: '#515151'
      tertiary_color: '#515151'
      primary_font_family: 'Open Sans'
      secondary_font_family: 'Open Sans'
      auto_approve: false
      activity_title_text: nyrdqkgqfmmcfsriqcqqlbfqf
      activity_title_placeholder: fzebpoe
      h5p_embed_option: false
      h5p_reuse_option: false
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
            "errors": [
              "Could not create suborganization. Please try again later."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |
          {
              "suborganization": {
                  "id": 1,
                  "name": "Curriki Studio",
                  "description": "test",
                  "account_id": "1",
                  "api_key": "test",
                  "unit_path": "path",
                  "noovo_client_id": "1",
                  "parent": "1",
                  "image": "/storage/organizations/03wNdqJIt0zGUvtBUFxF7VuIF1eCnNGO77g0ykAo.jpeg",
                  "favicon": "/storage/organizations/favicon/PlPVBtEVfKEU8PBI1eknYgW3kjIf5YdpILBS0Yyr.png",
                  "domain": "currikistudio",
                  "self_registration": true,
                  "gcr_project_visibility": true,
                  "gcr_playlist_visibility": false,
                  "gcr_activity_visibility": false,
                  "organization_role": "Administrator",
                  "organization_role_id": 1,
                  "projects_count": 4,
                  "suborganization_count": 5,
                  "users_count": 1,
                  "groups_count": 0,
                  "teams_count": 2,
                  "tos_type": "URL",
                  "tos_url": "https://curriki.org",
                  "tos_content": "Test content",
                  "privacy_policy_type": "Parent",
                  "privacy_policy_url": null,
                  "privacy_policy_content": null,
                  "branding": {
                      "primary_color": "#515151",
                      "secondary_color": "#515151",
                      "tertiary_color": "#515151",
                      "primary_font_family": "open sans",
                      "secondary_font_family": "open sans"
                  },
                  "allowed_visibility_type_id": [
                      {
                          "id": 1,
                          "name": "private",
                          "display_name": "Private (only Me)"
                      },
                      {
                          "id": 3,
                          "name": "global",
                          "display_name": "My Org + Parent and Child Org"
                      }
                  ],
                  "msteam_client_id" : null,
                  "msteam_secret_id" : null,
                  "msteam_tenant_id" : null,
                  "msteam_secret_id_expiry": null,
                  "msteam_project_visibility": true,
                  "msteam_playlist_visibility": false,
                  "msteam_activity_visibility": false
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{id}'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get Suborganization'
      description: 'Get the specified suborganization detail.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "suborganization": {
                  "id": 1,
                  "name": "Curriki Studio",
                  "description": "test",
                  "account_id": "1",
                  "api_key": "test",
                  "unit_path": "path",
                  "noovo_client_id": "1",
                  "parent": "1",
                  "image": "/storage/organizations/03wNdqJIt0zGUvtBUFxF7VuIF1eCnNGO77g0ykAo.jpeg",
                  "favicon": "/storage/organizations/favicon/PlPVBtEVfKEU8PBI1eknYgW3kjIf5YdpILBS0Yyr.png",
                  "domain": "currikistudio",
                  "self_registration": true,
                  "gcr_project_visibility": true,
                  "gcr_playlist_visibility": false,
                  "gcr_activity_visibility": false,
                  "organization_role": "Administrator",
                  "organization_role_id": 1,
                  "projects_count": 4,
                  "suborganization_count": 5,
                  "users_count": 1,
                  "groups_count": 0,
                  "teams_count": 2,
                  "tos_type": "URL",
                  "tos_url": "https://curriki.org",
                  "tos_content": "Test content",
                  "privacy_policy_type": "Parent",
                  "privacy_policy_url": null,
                  "privacy_policy_content": null,
                  "branding": {
                      "primary_color": "#515151",
                      "secondary_color": "#515151",
                      "tertiary_color": "#515151",
                      "primary_font_family": "open sans",
                      "secondary_font_family": "open sans"
                  },
                  "allowed_visibility_type_id": [
                      {
                          "id": 1,
                          "name": "private",
                          "display_name": "Private (only Me)"
                      },
                      {
                          "id": 3,
                          "name": "global",
                          "display_name": "My Org + Parent and Child Org"
                      }
                  ],
                  "msteam_client_id" : null,
                  "msteam_secret_id" : null,
                  "msteam_tenant_id" : null,
                  "msteam_secret_id_expiry": null,
                  "msteam_project_visibility": true,
                  "msteam_playlist_visibility": false,
                  "msteam_activity_visibility": false
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/suborganizations/{id}'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Remove Suborganization'
      description: 'Remove the specified suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 63
      suborganization: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Suborganization has been deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to delete suborganization."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{id}/index'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get All Suborganization'
      description: "Get a list of the suborganizations for a user's default organization."
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Query to search suborganization against'
        required: false
        example: Vivensity
        type: string
        custom: []
      size:
        name: size
        description: 'Size to show per page records'
        required: false
        example: 10
        type: integer
        custom: []
      order_by_column:
        name: order_by_column
        description: 'To sort data with specific column'
        required: false
        example: name
        type: string
        custom: []
      order_by_type:
        name: order_by_type
        description: 'To sort data in ascending or descending order'
        required: false
        example: asc
        type: string
        custom: []
    cleanBodyParameters:
      query: Vivensity
      size: 10
      order_by_column: name
      order_by_type: asc
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "suborganization": [
                  {
                      "id": 1,
                      "name": "Curriki Studio",
                      "description": "test",
                      "account_id": "1",
                      "api_key": "test",
                      "unit_path": "path",
                      "noovo_client_id": "1",
                      "parent": "1",
                      "image": "/storage/organizations/03wNdqJIt0zGUvtBUFxF7VuIF1eCnNGO77g0ykAo.jpeg",
                      "favicon": "/storage/organizations/favicon/PlPVBtEVfKEU8PBI1eknYgW3kjIf5YdpILBS0Yyr.png",
                      "domain": "currikistudio",
                      "self_registration": true,
                      "gcr_project_visibility": true,
                      "gcr_playlist_visibility": false,
                      "gcr_activity_visibility": false,
                      "organization_role": "Administrator",
                      "organization_role_id": 1,
                      "projects_count": 4,
                      "suborganization_count": 5,
                      "users_count": 1,
                      "groups_count": 0,
                      "teams_count": 2,
                      "tos_type": "URL",
                      "tos_url": "https://curriki.org",
                      "tos_content": "Test content",
                      "privacy_policy_type": "Parent",
                      "privacy_policy_url": null,
                      "privacy_policy_content": null,
                      "branding": {
                          "primary_color": "#515151",
                          "secondary_color": "#515151",
                          "tertiary_color": "#515151",
                          "primary_font_family": "open sans",
                          "secondary_font_family": "open sans"
                      },
                      "allowed_visibility_type_id": [
                          {
                              "id": 1,
                              "name": "private",
                              "display_name": "Private (only Me)"
                          },
                          {
                              "id": 3,
                              "name": "global",
                              "display_name": "My Org + Parent and Child Org"
                          }
                      ]
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/media-sources'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get Organization Media Sources'
      description: 'Get the media sources of specific organization for image and videos .'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "mediaSources": [
                  {
                      "id": 1,
                      "name": "My device",
                      "media_type": "Video",
                      "created_at": "2022-05-09T10:18:09.000000Z",
                      "updated_at": null,
                      "deleted_at": null,
                      "pivot": {
                          "organization_id": 1,
                          "media_source_id": 1,
                          "h5p_library": "H5P.AudioRecorder 1.0"
                      }
                  },
                  {
                      "id": 2,
                      "name": "YouTube",
                      "media_type": "Video",
                      "created_at": "2022-05-09T10:18:09.000000Z",
                      "updated_at": null,
                      "deleted_at": null,
                      "pivot": {
                          "organization_id": 1,
                          "media_source_id": 2,
                          "h5p_library": "H5P.CoursePresentation 1.22"
                      }
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/suborganizations/{suborganization_id}/update-media-sources'
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Update Suborganization Media Sources'
      description: 'Update the media sources for specified suborganization.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      media_source_ids:
        name: media_source_ids
        description: 'Ids of a media source type'
        required: true
        example: 1
        type: 'string[]'
        custom: []
      'media_source_ids[].media_source_id':
        name: 'media_source_ids[].media_source_id'
        description: ''
        required: true
        example: hic
        type: string
        custom: []
      'media_source_ids[].h5p_library':
        name: 'media_source_ids[].h5p_library'
        description: ''
        required: false
        example: null
        type: string
        custom: []
      h5p_library:
        name: h5p_library
        description: 'optional Name of H5p Library'
        required: false
        example: 'H5P.AudioRecorder 1.0'
        type: string
        custom: []
    cleanBodyParameters:
      media_source_ids: 1
      h5p_library: 'H5P.AudioRecorder 1.0'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             'message' => 'Media sources have been updated successfully.',
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to update Media sources."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "message": "Media sources has been updated successfully.",
              "mediaSources": [
                  {
                      "id": 1,
                      "name": "My device",
                      "media_type": "Video",
                      "created_at": "2022-05-09T10:18:09.000000Z",
                      "updated_at": null,
                      "deleted_at": null,
                      "pivot": {
                          "organization_id": 1,
                          "media_source_id": 1,
                          "h5p_library": "H5P.AudioRecorder 1.0"
                      }
                  },
                  {
                      "id": 7,
                      "name": "My device",
                      "media_type": "Image",
                      "created_at": "2022-05-09T10:18:09.000000Z",
                      "updated_at": null,
                      "deleted_at": null,
                      "pivot": {
                          "organization_id": 1,
                          "media_source_id": 7,
                          "h5p_library": "H5P.CoursePresentation 1.22"
                      }
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/media-sources
    metadata:
      groupName: '19. Suborganization API'
      groupDescription: |-

        APIs for Suborganization
      subgroup: null
      subgroupDescription: null
      title: 'Get Media Sources'
      description: 'Get the media sources for image and videos.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "mediaSources": {
                  "Video": [
                      {
                          "id": 1,
                          "name": "My device",
                          "media_type": "Video",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 2,
                          "name": "YouTube",
                          "media_type": "Video",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 3,
                          "name": "Kaltura",
                          "media_type": "Video",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 4,
                          "name": "Safari Montage",
                          "media_type": "Video",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 5,
                          "name": "BrightCove",
                          "media_type": "Video",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 6,
                          "name": "Vimeo",
                          "media_type": "Video",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      }
                  ],
                  "Image": [
                      {
                          "id": 7,
                          "name": "My device",
                          "media_type": "Image",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 8,
                          "name": "Pexels",
                          "media_type": "Image",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      },
                      {
                          "id": 9,
                          "name": "Safari Montage",
                          "media_type": "Image",
                          "created_at": "2022-05-09T10:18:09.000000Z",
                          "updated_at": null,
                          "deleted_at": null
                      }
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
