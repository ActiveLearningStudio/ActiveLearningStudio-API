name: '1. Authentication'
description: |-

  APIs for Authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: Register
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'First name of a user'
        required: true
        example: John
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Last name of a user'
        required: true
        example: Doe
        type: string
        custom: []
      email:
        name: email
        description: 'Email of a user'
        required: true
        example: john.doe@currikistudio.org
        type: string
        custom: []
      password:
        name: password
        description: Password
        required: true
        example: Password123
        type: string
        custom: []
      organization_name:
        name: organization_name
        description: 'Organization name of a user'
        required: true
        example: Curriki
        type: string
        custom: []
      organization_type:
        name: organization_type
        description: 'Organization type of a user'
        required: true
        example: Nonprofit
        type: string
        custom: []
      job_title:
        name: job_title
        description: 'Job title of a user'
        required: true
        example: Developer
        type: string
        custom: []
      domain:
        name: domain
        description: 'Organization domain user is registering for'
        required: true
        example: currikistudio
        type: string
        custom: []
    cleanBodyParameters:
      first_name: John
      last_name: Doe
      email: john.doe@currikistudio.org
      password: Password123
      organization_name: Curriki
      organization_type: Nonprofit
      job_title: Developer
      domain: currikistudio
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
            "message": "You are one step away from building the world's most immersive learning experiences with CurrikiStudio!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Could not create user account. Please try again later."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: Login
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of a user'
        required: true
        example: john.doe@currikistudio.org
        type: string
        custom: []
      password:
        name: password
        description: 'The password corresponded to the email'
        required: true
        example: Password123
        type: string
        custom: []
      domain:
        name: domain
        description: 'Organization domain to get data for'
        required: true
        example: curriki
        type: string
        custom: []
    cleanBodyParameters:
      email: john.doe@currikistudio.org
      password: Password123
      domain: curriki
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid Credentials."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid Domain."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Email is not verified."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/login
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Admin Login'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of a user'
        required: true
        example: john.doe@currikistudio.org
        type: string
        custom: []
      password:
        name: password
        description: 'The password corresponded to the email'
        required: true
        example: Password123
        type: string
        custom: []
      domain:
        name: domain
        description: ''
        required: false
        example: vel
        type: string
        custom: []
    cleanBodyParameters:
      email: john.doe@currikistudio.org
      password: Password123
      domain: vel
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid Credentials."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Email is not verified."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Unauthorized!"
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login/google
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Login with Google'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      domain:
        name: domain
        description: ''
        required: true
        example: quidem
        type: string
        custom: []
      tokenId:
        name: tokenId
        description: 'The token Id of google login'
        required: true
        example: eyJhbGciOiJSUzI1NiIsImtpZCI6IjJjNmZh...
        type: string
        custom: []
      tokenObj:
        name: tokenObj
        description: 'The token object of google login'
        required: true
        example: []
        type: object
        custom: []
      tokenObj.token_type:
        name: tokenObj.token_type
        description: 'The token type of google login'
        required: true
        example: Bearer
        type: string
        custom: []
      tokenObj.access_token:
        name: tokenObj.access_token
        description: 'The access token of google login'
        required: true
        example: ya29.a0AfH6SMBx-CIZfKRorxn8xPugO...
        type: string
        custom: []
      tokenObj.scope:
        name: tokenObj.scope
        description: 'The token scope of google login'
        required: true
        example: 'email profile ...'
        type: string
        custom: []
      tokenObj.login_hint:
        name: tokenObj.login_hint
        description: 'The token hint of google login'
        required: true
        example: AJDLj6JUa8yxXrhHdWRHIV0...
        type: string
        custom: []
      tokenObj.expires_in:
        name: tokenObj.expires_in
        description: 'The token expire of google login'
        required: true
        example: 3599
        type: integer
        custom: []
      tokenObj.id_token:
        name: tokenObj.id_token
        description: 'The token Id of google login'
        required: true
        example: eyJhbGciOiJSUzI1NiIsImtpZCI6I...
        type: string
        custom: []
      tokenObj.session_state:
        name: tokenObj.session_state
        description: 'The session state of google login'
        required: true
        example: []
        type: object
        custom: []
      tokenObj.session_state.extraQueryParams:
        name: tokenObj.session_state.extraQueryParams
        description: 'Extra query params for goole login'
        required: true
        example: []
        type: object
        custom: []
      tokenObj.session_state.extraQueryParams.authuser:
        name: tokenObj.session_state.extraQueryParams.authuser
        description: ''
        required: true
        example: '0'
        type: string
        custom: []
      tokenObj.first_issued_at:
        name: tokenObj.first_issued_at
        description: 'The first issued time of google login'
        required: true
        example: 1601535932504
        type: integer
        custom: []
      tokenObj.expires_at:
        name: tokenObj.expires_at
        description: 'The expire time of google login'
        required: true
        example: 1601539531504
        type: integer
        custom: []
      tokenObj.idpId:
        name: tokenObj.idpId
        description: 'The idp Id of google login'
        required: true
        example: google
        type: string
        custom: []
    cleanBodyParameters:
      domain: quidem
      tokenId: eyJhbGciOiJSUzI1NiIsImtpZCI6IjJjNmZh...
      tokenObj:
        token_type: Bearer
        access_token: ya29.a0AfH6SMBx-CIZfKRorxn8xPugO...
        scope: 'email profile ...'
        login_hint: AJDLj6JUa8yxXrhHdWRHIV0...
        expires_in: 3599
        id_token: eyJhbGciOiJSUzI1NiIsImtpZCI6I...
        session_state:
          extraQueryParams:
            authuser: '0'
        first_issued_at: 1601535932504
        expires_at: 1601539531504
        idpId: google
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Unable to login with Google."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login/sso
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Login with LTI SSO 1.0'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      sso_info:
        name: sso_info
        description: 'The base64encode query params'
        required: true
        example: dXNlcl9rZXk9YWFobWFkJnVzZXJfZW1haWw9YXFlZWwuYWhtYWQlNDB...
        type: string
        custom: []
    cleanBodyParameters:
      sso_info: dXNlcl9rZXk9YWFobWFkJnVzZXJfZW1haWw9YXFlZWwuYWhtYWQlNDB...
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Unable to login with LTI SSO."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login/lti-sso
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Login with LTI SSO'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      sso_info:
        name: sso_info
        description: 'The base64encode query params'
        required: true
        example: dXNlcl9rZXk9YWFobWFkJnVzZXJfZW1haWw9YXFlZWwuYWhtYWQlNDB...
        type: string
        custom: []
    cleanBodyParameters:
      sso_info: dXNlcl9rZXk9YWFobWFkJnVzZXJfZW1haWw9YXFlZWwuYWhtYWQlNDB...
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Unable to login with LTI SSO."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login/wordpress-sso
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Wordpress SSO: Execute wordpress sso authentication'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      clientId:
        name: clientId
        description: 'Client id for the integration: 7PwnyVuYIWJtdKYIzvxBpo5wFAizj12F6WU8qFta'
        required: true
        example: quia
        type: string
        custom: []
      code:
        name: code
        description: 'Temporary token for sso : 7PwnyVuYIWJtdKYIzvxBpo5wFAizj12F6WU8qFta'
        required: true
        example: vero
        type: string
        custom: []
    cleanBodyParameters:
      clientId: quia
      code: vero
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/oauth/{provider}/redirect'
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Oaut Redirect'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      provider:
        name: provider
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanUrlParameters:
      provider: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '- Redirect'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/oauth/{provider}/callback'
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: 'Oaut oauthCallBack'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      provider:
        name: provider
        description: ''
        required: true
        example: amet
        type: string
        custom: []
    cleanUrlParameters:
      provider: amet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '- Redirect back'
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: "{\r\n    \"user\": {\r\n        \"id\": 1,\r\n        \"first_name\": \"John\",\r\n        \"last_name\": \"Doe\",\r\n        \"email\": \"john.doe@currikistudio.org\",\r\n        \"organization_name\": \"Curriki\",\r\n        \"organization_type\": null,\r\n        \"job_title\": \"Developer\",\r\n        \"address\": \"20660 Stevens Creek Blvd #332, Cupertino, CA 95014\",\r\n        \"phone_number\": \"+1234567890\",\r\n        \"website\": \"www.currikistudio.org\",\r\n        \"subscribed\": true\r\n    },\r\n    \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9...\"\r\n}\r\n"
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/forgot-password
    metadata:
      groupName: '1. Authentication'
      groupDescription: ''
      subgroup: null
      subgroupDescription: null
      title: |-
        Forgot Password

        Send a password reset link to the given user.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email of a user'
        required: true
        example: john.doe@currikistudio.org
        type: string
        custom: []
    cleanBodyParameters:
      email: john.doe@currikistudio.org
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password reset email has been sent. Please follow the instructions."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Email is not verified."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/reset-password
    metadata:
      groupName: '1. Authentication'
      groupDescription: ''
      subgroup: null
      subgroupDescription: null
      title: |-
        Reset Password

        Reset the given user's password.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      token:
        name: token
        description: 'The token for reset password'
        required: true
        example: ya29.a0AfH6SMBx-CIZfKRorxn8xPugO...
        type: string
        custom: []
      email:
        name: email
        description: 'The email of a user'
        required: true
        example: john.doe@currikistudio.org
        type: string
        custom: []
      password:
        name: password
        description: 'The new password'
        required: true
        example: Password123
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The confirmation of password'
        required: true
        example: Password123
        type: string
        custom: []
    cleanBodyParameters:
      token: ya29.a0AfH6SMBx-CIZfKRorxn8xPugO...
      email: john.doe@currikistudio.org
      password: Password123
      password_confirmation: Password123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Password has been reset successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "Invalid request."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/verify-email
    metadata:
      groupName: '1. Authentication'
      groupDescription: ''
      subgroup: null
      subgroupDescription: null
      title: |-
        Verify an Email Address

        Mark the authenticated user's email address as verified.
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The Id of a user'
        required: true
        example: 1
        type: integer
        custom: []
      hash:
        name: hash
        description: 'The hash string'
        required: true
        example: 9e0f70124a2a88d5435...
        type: string
        custom: []
      signature:
        name: signature
        description: 'The signature'
        required: true
        example: 467fbe9a00e7d367553f...
        type: string
        custom: []
      expires:
        name: expires
        description: 'The expire time of verification email'
        required: true
        example: 1599754915
        type: integer
        custom: []
    cleanBodyParameters:
      id: 1
      hash: 9e0f70124a2a88d5435...
      signature: 467fbe9a00e7d367553f...
      expires: 1599754915
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: '1. Authentication'
      groupDescription: |-

        APIs for Authentication
      subgroup: null
      subgroupDescription: null
      title: Logout
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "You have been successfully logged out."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
