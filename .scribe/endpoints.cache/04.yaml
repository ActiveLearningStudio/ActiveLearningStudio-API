## Autogenerated by Scribe. DO NOT MODIFY.

name: '4. Playlist'
description: |-

  APIs for playlist management
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/playlists/{playlist_id}/load-shared'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get Shared Playlist'
      description: 'Get the specified shared playlist of a Project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      playlist_id: 171
      playlist: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Playlist is not shareable."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/playlists/{playlist_id}/load-shared-playlist'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get Shared Playlist'
      description: 'Get the specified shared playlist detail.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      playlist_id: 171
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Playlist is not shareable."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/shared-playlists'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get All Shared Playlists of a Project'
      description: 'Get the list of shared playlists detail.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "No shareable Playlist found."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/playlists/update-order
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "",
              "exception": "Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException",
              "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/AbstractRouteCollection.php",
              "line": 44,
              "trace": [
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/CompiledRouteCollection.php",
                      "line": 144,
                      "function": "handleMatchedRoute",
                      "class": "Illuminate\\Routing\\AbstractRouteCollection",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 753,
                      "function": "match",
                      "class": "Illuminate\\Routing\\CompiledRouteCollection",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 740,
                      "function": "findRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 729,
                      "function": "dispatchToRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 190,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 141,
                      "function": "Illuminate\\Foundation\\Http\\{closure}",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php",
                      "line": 31,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php",
                      "line": 40,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php",
                      "line": 27,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php",
                      "line": 86,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/app/Http/Middleware/Cors.php",
                      "line": 40,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "App\\Http\\Middleware\\Cors",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php",
                      "line": 39,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\TrustProxies",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 116,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 165,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 134,
                      "function": "sendRequestThroughRouter",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 306,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 294,
                      "function": "callLaravelOrLumenRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 92,
                      "function": "makeApiCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 45,
                      "function": "makeResponseCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 35,
                      "function": "makeResponseCallIfConditionsPass",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 209,
                      "function": "__invoke",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 166,
                      "function": "iterateThroughStrategies",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 95,
                      "function": "fetchResponses",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 122,
                      "function": "processRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 69,
                      "function": "extractEndpointsInfoFromLaravelApp",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 47,
                      "function": "extractEndpointsInfoAndWriteToDisk",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php",
                      "line": 53,
                      "function": "get",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 36,
                      "function": "handle",
                      "class": "Knuckles\\Scribe\\Commands\\GenerateDocumentation",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/Util.php",
                      "line": 41,
                      "function": "Illuminate\\Container\\{closure}",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 93,
                      "function": "unwrapIfClosure",
                      "class": "Illuminate\\Container\\Util",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 37,
                      "function": "callBoundMethod",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/Container.php",
                      "line": 651,
                      "function": "call",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 182,
                      "function": "call",
                      "class": "Illuminate\\Container\\Container",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Command/Command.php",
                      "line": 312,
                      "function": "execute",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 152,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Command\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Application.php",
                      "line": 1020,
                      "function": "run",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Application.php",
                      "line": 312,
                      "function": "doRunCommand",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Application.php",
                      "line": 168,
                      "function": "doRun",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Console/Application.php",
                      "line": 102,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php",
                      "line": 155,
                      "function": "run",
                      "class": "Illuminate\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/artisan",
                      "line": 37,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Console\\Kernel",
                      "type": "->"
                  }
              ]
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/playlists/reorder'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Reorder Playlists'
      description: 'Reorder playlists of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      playlists:
        name: playlists
        description: 'Playlists of a project'
        required: true
        example:
          - est
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      playlists:
        - est
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "playlists": [
                  {
                      "id": 1,
                      "title": "Math Playlist",
                      "order": 0,
                      "is_public": true,
                      "gcr_playlist_visibility": true,
                      "project_id": 1,
                      "project": {
                          "id": 1,
                          "name": "Test Project",
                          "description": "This is a test project.",
                          "thumb_url": "https://images.pexels.com/photos/2832382",
                          "shared": true,
                          "starter_project": null,
                          "users": [
                              {
                                  "id": 1,
                                  "first_name": "John",
                                  "last_name": "Doe",
                                  "email": "john.doe@currikistudio.org",
                                  "role": "owner"
                              }
                          ],
                          "is_public": true,
                          "created_at": "2020-09-06T19:21:08.000000Z",
                          "updated_at": "2020-09-06T19:21:08.000000Z"
                      },
                      "activities": [
                          {
                              "id": 1,
                              "playlist_id": 1,
                              "title": "Audio Record",
                              "type": "h5p",
                              "content": "Audio Record content",
                              "shared": true,
                              "order": 0,
                              "thumb_url": "/storage/activities/3vVpHHh75MJHOV6a6iZdy13luBaiNn1SrniYpBbQ.png",
                              "subject_id": "Career & Technical Education",
                              "education_level_id": null,
                              "h5p_content": {
                                  "id": 19430,
                                  "user_id": 1,
                                  "title": "record",
                                  "library_id": 98,
                                  "parameters": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing \\\"Retry\\\" you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can't create the audio file.\"}}",
                                  "filtered": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing &quot;Retry&quot; you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can&#039;t create the audio file.\"}}",
                                  "slug": "record",
                                  "embed_type": "div",
                                  "disable": 9,
                                  "content_type": null,
                                  "authors": null,
                                  "source": null,
                                  "year_from": null,
                                  "year_to": null,
                                  "license": "U",
                                  "license_version": null,
                                  "license_extras": null,
                                  "author_comments": null,
                                  "changes": null,
                                  "default_language": null,
                                  "created_at": "2020-09-27T07:14:57.000000Z",
                                  "updated_at": "2020-09-27T07:14:57.000000Z"
                              },
                              "is_public": false,
                              "created_at": "2020-09-27T07:14:57.000000Z",
                              "updated_at": "2020-09-27T07:14:57.000000Z"
                          },
                          {
                              "id": 2,
                              "playlist_id": 1,
                              "title": "Language Arts",
                              "type": "h5p",
                              "content": "Language Arts content",
                              "shared": true,
                              "order": 1,
                              "thumb_url": "/storage/activities/w2LXV4VMPgccjJyZbs16wSzglX1s58K5NFfFp7ed.png",
                              "subject_id": "Language Arts",
                              "education_level_id": null,
                              "h5p_content": {
                                  "id": 19431,
                                  "user_id": 1,
                                  "title": "fghfhg",
                                  "library_id": 98,
                                  "parameters": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing \\\"Retry\\\" you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can't create the audio file.\"}}",
                                  "filtered": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing &quot;Retry&quot; you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can&#039;t create the audio file.\"}}",
                                  "slug": "fghfhg",
                                  "embed_type": "div",
                                  "disable": 9,
                                  "content_type": null,
                                  "authors": null,
                                  "source": null,
                                  "year_from": null,
                                  "year_to": null,
                                  "license": "U",
                                  "license_version": null,
                                  "license_extras": null,
                                  "author_comments": null,
                                  "changes": null,
                                  "default_language": null,
                                  "created_at": "2020-09-07T07:15:31.000000Z",
                                  "updated_at": "2020-09-07T07:15:31.000000Z"
                              },
                              "is_public": false,
                              "created_at": "2020-09-07T07:15:31.000000Z",
                              "updated_at": "2020-09-07T07:15:31.000000Z"
                          }
                      ],
                      "created_at": "2020-09-07T17:01:24.000000Z",
                      "updated_at": "2020-09-07T17:01:24.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Music Playlist",
                      "order": 1,
                      "is_public": false,
                      "project_id": 1,
                      "project": {
                          "id": 1,
                          "name": "Test Project",
                          "description": "This is a test project.",
                          "thumb_url": "https://images.pexels.com/photos/2832382",
                          "shared": true,
                          "starter_project": null,
                          "users": [
                              {
                                  "id": 1,
                                  "first_name": "John",
                                  "last_name": "Doe",
                                  "email": "john.doe@currikistudio.org",
                                  "role": "owner"
                              }
                          ],
                          "is_public": true,
                          "created_at": "2020-09-06T19:21:08.000000Z",
                          "updated_at": "2020-09-06T19:21:08.000000Z"
                      },
                      "activities": [],
                      "created_at": "2020-09-16T18:21:29.000000Z",
                      "updated_at": "2020-09-16T18:21:29.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/playlists/{playlist_id}/clone'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Clone Playlist'
      description: 'Clone a playlist of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      playlist_id: 171
      project: '1'
      playlist: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Playlist is being cloned|duplicated in background!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Not a Public Playlist."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/playlists'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get Playlists'
      description: 'Get a list of the playlists of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "playlists": [
                  {
                      "id": 1,
                      "title": "Math Playlist",
                      "order": 0,
                      "is_public": true,
                      "gcr_playlist_visibility": true,
                      "project_id": 1,
                      "project": {
                          "id": 1,
                          "name": "Test Project",
                          "description": "This is a test project.",
                          "thumb_url": "https://images.pexels.com/photos/2832382",
                          "shared": true,
                          "starter_project": null,
                          "users": [
                              {
                                  "id": 1,
                                  "first_name": "John",
                                  "last_name": "Doe",
                                  "email": "john.doe@currikistudio.org",
                                  "role": "owner"
                              }
                          ],
                          "is_public": true,
                          "created_at": "2020-09-06T19:21:08.000000Z",
                          "updated_at": "2020-09-06T19:21:08.000000Z"
                      },
                      "activities": [
                          {
                              "id": 1,
                              "playlist_id": 1,
                              "title": "Audio Record",
                              "type": "h5p",
                              "content": "Audio Record content",
                              "shared": true,
                              "order": 0,
                              "thumb_url": "/storage/activities/3vVpHHh75MJHOV6a6iZdy13luBaiNn1SrniYpBbQ.png",
                              "subject_id": "Career & Technical Education",
                              "education_level_id": null,
                              "h5p_content": {
                                  "id": 19430,
                                  "user_id": 1,
                                  "title": "record",
                                  "library_id": 98,
                                  "parameters": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing \\\"Retry\\\" you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can't create the audio file.\"}}",
                                  "filtered": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing &quot;Retry&quot; you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can&#039;t create the audio file.\"}}",
                                  "slug": "record",
                                  "embed_type": "div",
                                  "disable": 9,
                                  "content_type": null,
                                  "authors": null,
                                  "source": null,
                                  "year_from": null,
                                  "year_to": null,
                                  "license": "U",
                                  "license_version": null,
                                  "license_extras": null,
                                  "author_comments": null,
                                  "changes": null,
                                  "default_language": null,
                                  "created_at": "2020-09-27T07:14:57.000000Z",
                                  "updated_at": "2020-09-27T07:14:57.000000Z"
                              },
                              "is_public": false,
                              "created_at": "2020-09-27T07:14:57.000000Z",
                              "updated_at": "2020-09-27T07:14:57.000000Z"
                          },
                          {
                              "id": 2,
                              "playlist_id": 1,
                              "title": "Language Arts",
                              "type": "h5p",
                              "content": "Language Arts content",
                              "shared": true,
                              "order": 1,
                              "thumb_url": "/storage/activities/w2LXV4VMPgccjJyZbs16wSzglX1s58K5NFfFp7ed.png",
                              "subject_id": "Language Arts",
                              "education_level_id": null,
                              "h5p_content": {
                                  "id": 19431,
                                  "user_id": 1,
                                  "title": "fghfhg",
                                  "library_id": 98,
                                  "parameters": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing \\\"Retry\\\" you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can't create the audio file.\"}}",
                                  "filtered": "{\"l10n\":{\"recordAnswer\":\"Record\",\"pause\":\"Pause\",\"continue\":\"Continue\",\"download\":\"Download\",\"done\":\"Done\",\"retry\":\"Retry\",\"microphoneNotSupported\":\"Microphone not supported. Make sure you are using a browser that allows microphone recording.\",\"microphoneInaccessible\":\"Microphone is not accessible. Make sure that the browser microphone is enabled.\",\"insecureNotAllowed\":\"Access to microphone is not allowed in your browser since this page is not served using HTTPS. Please contact the author, and ask him to make this available using HTTPS\",\"statusReadyToRecord\":\"Press a button below to record your answer.\",\"statusRecording\":\"Recording...\",\"statusPaused\":\"Recording paused. Press a button to continue recording.\",\"statusFinishedRecording\":\"You have successfully recorded your answer! Listen to the recording below.\",\"downloadRecording\":\"Download this recording or retry.\",\"retryDialogHeaderText\":\"Retry recording?\",\"retryDialogBodyText\":\"By pressing &quot;Retry&quot; you will lose your current recording.\",\"retryDialogConfirmText\":\"Retry\",\"retryDialogCancelText\":\"Cancel\",\"statusCantCreateTheAudioFile\":\"Can&#039;t create the audio file.\"}}",
                                  "slug": "fghfhg",
                                  "embed_type": "div",
                                  "disable": 9,
                                  "content_type": null,
                                  "authors": null,
                                  "source": null,
                                  "year_from": null,
                                  "year_to": null,
                                  "license": "U",
                                  "license_version": null,
                                  "license_extras": null,
                                  "author_comments": null,
                                  "changes": null,
                                  "default_language": null,
                                  "created_at": "2020-09-07T07:15:31.000000Z",
                                  "updated_at": "2020-09-07T07:15:31.000000Z"
                              },
                              "is_public": false,
                              "created_at": "2020-09-07T07:15:31.000000Z",
                              "updated_at": "2020-09-07T07:15:31.000000Z"
                          }
                      ],
                      "created_at": "2020-09-07T17:01:24.000000Z",
                      "updated_at": "2020-09-07T17:01:24.000000Z"
                  },
                  {
                      "id": 2,
                      "title": "Music Playlist",
                      "order": 1,
                      "is_public": false,
                      "project_id": 1,
                      "project": {
                          "id": 1,
                          "name": "Test Project",
                          "description": "This is a test project.",
                          "thumb_url": "https://images.pexels.com/photos/2832382",
                          "shared": true,
                          "starter_project": null,
                          "users": [
                              {
                                  "id": 1,
                                  "first_name": "John",
                                  "last_name": "Doe",
                                  "email": "john.doe@currikistudio.org",
                                  "role": "owner"
                              }
                          ],
                          "is_public": true,
                          "created_at": "2020-09-06T19:21:08.000000Z",
                          "updated_at": "2020-09-06T19:21:08.000000Z"
                      },
                      "activities": [],
                      "created_at": "2020-09-16T18:21:29.000000Z",
                      "updated_at": "2020-09-16T18:21:29.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/{project_id}/playlists'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Create Playlist'
      description: 'Create a new playlist of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project Example 1'
        required: true
        example: maxime
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      project: maxime
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of a playlist'
        required: true
        example: 'Math Playlist'
        type: string
        custom: []
      order:
        name: order
        description: 'The order number of a playlist'
        required: false
        example: 0
        type: integer
        custom: []
    cleanBodyParameters:
      title: 'Math Playlist'
      order: 0
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
            "errors": [
              "Could not create playlist. Please try again later."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/playlists/{id}'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get Playlist'
      description: 'Get the specified playlist of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      id: 171
      project: '1'
      playlist: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid project or playlist id."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/projects/{project_id}/playlists/{id}'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Update Playlist'
      description: 'Update the specified playlist of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      id: 171
      project: '1'
      playlist: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of a playlist'
        required: true
        example: 'Math Playlist'
        type: string
        custom: []
      order:
        name: order
        description: 'The order number of a playlist'
        required: false
        example: 0
        type: integer
        custom: []
    cleanBodyParameters:
      title: 'Math Playlist'
      order: 0
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid project or playlist id."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to update playlist."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/projects/{project_id}/playlists/{id}'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Remove Playlist'
      description: 'Remove the specified playlist of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      id: 171
      project: '1'
      playlist: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Playlist has been deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Invalid project or playlist id."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to delete playlist."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/playlists/{playlist_id}/search-preview'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get Playlist Search Preview'
      description: 'Get the specified playlist search preview.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      playlist_id: 171
      suborganization: '1'
      playlist: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
            "message": [
              "Playlist is not available."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/playlists/{playlist_id}/share'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Share playlist'
      description: 'Share the specified playlist of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      playlist_id: 171
      playlist: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to share playlist."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/playlists/{playlist_id}/remove-share'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Remove Share playlist'
      description: 'Remove Share the specified playlist of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      playlist:
        name: playlist
        description: 'The Id of a playlist'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      playlist_id: 171
      playlist: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to remove share playlist."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/playlists/{playlist_id}/lti'
    metadata:
      groupName: '4. Playlist'
      groupDescription: |-

        APIs for playlist management
      subgroup: null
      subgroupDescription: null
      title: 'Get Lti Playlist'
      description: 'Get the lti playlist of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      playlist_id:
        name: playlist_id
        description: 'The ID of the playlist.'
        required: true
        example: 171
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project Example 1'
        required: true
        example: fugit
        type: string
        custom: []
    cleanUrlParameters:
      playlist_id: 171
      project: fugit
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "playlist": {
                  "id": 1,
                  "title": "Math Playlist",
                  "order": 0,
                  "is_public": true,
                  "project_id": 1,
                  "gcr_playlist_visibility": true,
                  "project": {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "users": [
                          {
                              "id": 1,
                              "first_name": "John",
                              "last_name": "Doe",
                              "email": "john.doe@currikistudio.org",
                              "role": "owner"
                          }
                      ],
                      "is_public": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  "activities": [],
                  "created_at": "2020-09-07T17:01:24.000000Z",
                  "updated_at": "2020-09-07T17:01:24.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
