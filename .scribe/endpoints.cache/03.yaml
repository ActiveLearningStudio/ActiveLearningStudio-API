## Autogenerated by Scribe. DO NOT MODIFY.

name: '3. Project'
description: |-

  APIs for project management
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/load-shared'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get Shared Project'
      description: 'Get the specified shared project detail.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 400
        content: |-
          {
            "errors": [
              "Project is not shareable."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 201
        content: |-
          {
              "project": {
                  "id": 1,
                  "organization_id": 1,
                  "organization_visibility_type_id": 4,
                  "name": "The Science of Golf",
                  "description": "Uncover the science, technology, engineering, and mathematics behind the game of golf.",
                  "thumb_url": "/storage/uploads/nN5y8v8zh2ghxrKuHCv5wvJOREFw0Nr27s2DPxWq.png",
                  "shared": false,
                  "gcr_project_visibility": true,
                  "starter_project": false,
                  "order": null,
                  "status": 1,
                  "status_text": "DRAFT",
                  "indexing": null,
                  "indexing_text": "NOT REQUESTED",
                  "created_at": "2020-04-30T20:03:12.000000Z",
                  "updated_at": "2020-09-17T09:44:27.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/search-preview'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get Project Search Preview'
      description: 'Get the specified project search preview.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "project": {
                  "id": 2459,
                  "name": "Teach for America: High School Science",
                  "description": "This project consists of two playlists serving as exemplar high school science digital learning instruction.",
                  "thumb_url": "https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280",
                  "shared": false,
                  "indexing": null,
                  "indexing_text": "NOT REQUESTED",
                  "created_at": "2021-05-03T15:41:08.000000Z",
                  "updated_at": "2021-05-03T15:41:08.000000Z",
                  "playlists": [
                      {
                          "id": 5078,
                          "title": "The Smallest Unit of Life: The Cell",
                          "project_id": 2459,
                          "created_at": "2021-05-03T15:41:11.000000Z",
                          "updated_at": "2021-05-03T15:41:11.000000Z",
                          "activities": [
                              {
                                  "id": 23090,
                                  "title": "What You'll Explore",
                                  "type": "h5p",
                                  "thumb_url": "https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280",
                                  "library_name": "H5P.Accordion 1.0"
                              },
                              {
                                  "id": 23091,
                                  "title": "History of Cell Theory",
                                  "type": "h5p",
                                  "thumb_url": "https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280",
                                  "library_name": "H5P.Column 1.11"
                              }
                          ]
                      },
                      {
                          "id": 5079,
                          "title": "Understanding the Atom",
                          "project_id": 2459,
                          "created_at": "2021-05-03T15:41:15.000000Z",
                          "updated_at": "2021-05-03T15:41:15.000000Z",
                          "activities": [
                              {
                                  "id": 23097,
                                  "title": "Build an Atom",
                                  "type": "h5p",
                                  "thumb_url": "https://images.pexels.com/photos/593158/pexels-photo-593158.jpeg?auto=compress&amp;cs=tinysrgb&amp;dpr=1&amp;fit=crop&amp;h=200&amp;w=280",
                                  "library_name": "H5P.IFrameEmbed 1.0"
                              }
                          ]
                      }
                  ]
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/upload-thumb'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Upload thumbnail'
      description: 'Upload thumbnail image for a project'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      thumb:
        name: thumb
        description: 'Thumbnail image to upload'
        required: true
        example: (binary)
        type: image
        custom: []
      project_id:
        name: project_id
        description: ''
        required: false
        example: 4
        type: integer
        custom: []
    cleanBodyParameters:
      thumb: (binary)
      project_id: 4
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "thumbUrl": "/storage/projects/1fqwe2f65ewf465qwe46weef5w5eqwq.png"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "message": "The given data was invalid.",
            "errors": {
              "thumb": [
                "The thumb must be an image."
              ]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects/recent'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get Recent Projects'
      description: 'Get a list of the recent projects of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "playlists": [
                          {
                              "id": 1,
                              "title": "Test Playlist 1",
                              "order": 1,
                              "created_at": "2020-09-10T19:21:08.000000Z",
                              "updated_at": "2020-09-10T19:21:08.000000Z"
                          },
                          {
                              "id": 2,
                              "title": "Test Playlist 2",
                              "order": 2,
                              "created_at": "2020-09-11T19:21:08.000000Z",
                              "updated_at": "2020-09-11T19:21:08.000000Z"
                          }
                      ],
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "playlists": [
                          {
                              "id": 3,
                              "title": "Test Playlist 3",
                              "order": 1,
                              "created_at": "2020-09-12T19:21:08.000000Z",
                              "updated_at": "2020-09-12T19:21:08.000000Z"
                          },
                          {
                              "id": 4,
                              "title": "Test Playlist 4",
                              "order": 2,
                              "created_at": "2020-09-13T19:21:08.000000Z",
                              "updated_at": "2020-09-13T19:21:08.000000Z"
                          }
                      ],
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects/default'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get Default Projects'
      description: 'Get a list of the default projects.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'Id of an organization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters:
      size:
        name: size
        description: ''
        required: false
        example: 10
        type: integer
        custom: []
      order_by_type:
        name: order_by_type
        description: ''
        required: false
        example: 'ASC OR DESC'
        type: string
        custom: []
      order_by_column8:
        name: order_by_column8
        description: ''
        required: false
        example: 'name, created_at'
        type: string
        custom: []
    cleanQueryParameters:
      size: 10
      order_by_type: 'ASC OR DESC'
      order_by_column8: 'name, created_at'
    bodyParameters:
      size:
        name: size
        description: ''
        required: false
        example: 7
        type: integer
        custom: []
      order_by_column:
        name: order_by_column
        description: 'Must be one of <code>id</code>, <code>name</code>, <code>order.status</code>, or <code>created_at</code>.'
        required: false
        example: id
        type: string
        custom: []
      order_by_type:
        name: order_by_type
        description: 'Must be one of <code>asc</code>, <code>desc</code>, <code>ASC</code>, or <code>DESC</code>.'
        required: false
        example: ASC
        type: string
        custom: []
    cleanBodyParameters:
      size: 7
      order_by_column: id
      order_by_type: ASC
    fileParameters: []
    responses:
      -
        status: 200
        content: array
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "playlists": [
                          {
                              "id": 1,
                              "title": "Test Playlist 1",
                              "order": 1,
                              "created_at": "2020-09-10T19:21:08.000000Z",
                              "updated_at": "2020-09-10T19:21:08.000000Z"
                          },
                          {
                              "id": 2,
                              "title": "Test Playlist 2",
                              "order": 2,
                              "created_at": "2020-09-11T19:21:08.000000Z",
                              "updated_at": "2020-09-11T19:21:08.000000Z"
                          }
                      ],
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "playlists": [
                          {
                              "id": 3,
                              "title": "Test Playlist 3",
                              "order": 1,
                              "created_at": "2020-09-12T19:21:08.000000Z",
                              "updated_at": "2020-09-12T19:21:08.000000Z"
                          },
                          {
                              "id": 4,
                              "title": "Test Playlist 4",
                              "order": 2,
                              "created_at": "2020-09-13T19:21:08.000000Z",
                              "updated_at": "2020-09-13T19:21:08.000000Z"
                          }
                      ],
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects/detail'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get All Projects Detail'
      description: 'Get a list of the projects of a user with detail.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "playlists": [
                          {
                              "id": 1,
                              "title": "Test Playlist 1",
                              "order": 1,
                              "created_at": "2020-09-10T19:21:08.000000Z",
                              "updated_at": "2020-09-10T19:21:08.000000Z"
                          },
                          {
                              "id": 2,
                              "title": "Test Playlist 2",
                              "order": 2,
                              "created_at": "2020-09-11T19:21:08.000000Z",
                              "updated_at": "2020-09-11T19:21:08.000000Z"
                          }
                      ],
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "playlists": [
                          {
                              "id": 3,
                              "title": "Test Playlist 3",
                              "order": 1,
                              "created_at": "2020-09-12T19:21:08.000000Z",
                              "updated_at": "2020-09-12T19:21:08.000000Z"
                          },
                          {
                              "id": 4,
                              "title": "Test Playlist 4",
                              "order": 2,
                              "created_at": "2020-09-13T19:21:08.000000Z",
                              "updated_at": "2020-09-13T19:21:08.000000Z"
                          }
                      ],
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/projects/update-order
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "",
              "exception": "Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException",
              "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/AbstractRouteCollection.php",
              "line": 44,
              "trace": [
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/CompiledRouteCollection.php",
                      "line": 144,
                      "function": "handleMatchedRoute",
                      "class": "Illuminate\\Routing\\AbstractRouteCollection",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 753,
                      "function": "match",
                      "class": "Illuminate\\Routing\\CompiledRouteCollection",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 740,
                      "function": "findRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Routing/Router.php",
                      "line": 729,
                      "function": "dispatchToRoute",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 190,
                      "function": "dispatch",
                      "class": "Illuminate\\Routing\\Router",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 141,
                      "function": "Illuminate\\Foundation\\Http\\{closure}",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ConvertEmptyStringsToNull.php",
                      "line": 31,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ConvertEmptyStringsToNull",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TransformsRequest.php",
                      "line": 21,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/TrimStrings.php",
                      "line": 40,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TransformsRequest",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\TrimStrings",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/ValidatePostSize.php",
                      "line": 27,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\ValidatePostSize",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Middleware/PreventRequestsDuringMaintenance.php",
                      "line": 86,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Middleware\\PreventRequestsDuringMaintenance",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/app/Http/Middleware/Cors.php",
                      "line": 40,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "App\\Http\\Middleware\\Cors",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Http/Middleware/TrustProxies.php",
                      "line": 39,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 180,
                      "function": "handle",
                      "class": "Illuminate\\Http\\Middleware\\TrustProxies",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Pipeline/Pipeline.php",
                      "line": 116,
                      "function": "Illuminate\\Pipeline\\{closure}",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 165,
                      "function": "then",
                      "class": "Illuminate\\Pipeline\\Pipeline",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Http/Kernel.php",
                      "line": 134,
                      "function": "sendRequestThroughRouter",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 306,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Http\\Kernel",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 294,
                      "function": "callLaravelOrLumenRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 92,
                      "function": "makeApiCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 45,
                      "function": "makeResponseCall",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Strategies/Responses/ResponseCalls.php",
                      "line": 35,
                      "function": "makeResponseCallIfConditionsPass",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 209,
                      "function": "__invoke",
                      "class": "Knuckles\\Scribe\\Extracting\\Strategies\\Responses\\ResponseCalls",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 166,
                      "function": "iterateThroughStrategies",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Extracting/Extractor.php",
                      "line": 95,
                      "function": "fetchResponses",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 122,
                      "function": "processRoute",
                      "class": "Knuckles\\Scribe\\Extracting\\Extractor",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 69,
                      "function": "extractEndpointsInfoFromLaravelApp",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/GroupedEndpoints/GroupedEndpointsFromApp.php",
                      "line": 47,
                      "function": "extractEndpointsInfoAndWriteToDisk",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/knuckleswtf/scribe/src/Commands/GenerateDocumentation.php",
                      "line": 53,
                      "function": "get",
                      "class": "Knuckles\\Scribe\\GroupedEndpoints\\GroupedEndpointsFromApp",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 36,
                      "function": "handle",
                      "class": "Knuckles\\Scribe\\Commands\\GenerateDocumentation",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/Util.php",
                      "line": 41,
                      "function": "Illuminate\\Container\\{closure}",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 93,
                      "function": "unwrapIfClosure",
                      "class": "Illuminate\\Container\\Util",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/BoundMethod.php",
                      "line": 37,
                      "function": "callBoundMethod",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Container/Container.php",
                      "line": 651,
                      "function": "call",
                      "class": "Illuminate\\Container\\BoundMethod",
                      "type": "::"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 182,
                      "function": "call",
                      "class": "Illuminate\\Container\\Container",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Command/Command.php",
                      "line": 312,
                      "function": "execute",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Console/Command.php",
                      "line": 152,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Command\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Application.php",
                      "line": 1020,
                      "function": "run",
                      "class": "Illuminate\\Console\\Command",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Application.php",
                      "line": 312,
                      "function": "doRunCommand",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/symfony/console/Application.php",
                      "line": 168,
                      "function": "doRun",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Console/Application.php",
                      "line": 102,
                      "function": "run",
                      "class": "Symfony\\Component\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/vendor/laravel/framework/src/Illuminate/Foundation/Console/Kernel.php",
                      "line": 155,
                      "function": "run",
                      "class": "Illuminate\\Console\\Application",
                      "type": "->"
                  },
                  {
                      "file": "/var/www/studio/api/artisan",
                      "line": 37,
                      "function": "handle",
                      "class": "Illuminate\\Foundation\\Console\\Kernel",
                      "type": "->"
                  }
              ]
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects/favorites'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get All Favorite Projects of login user'
      description: 'Get a list of the favorite projects of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      Organization:
        name: Organization
        description: $suborganization
        required: false
        example: error
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      Organization: error
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      size:
        name: size
        description: ''
        required: false
        example: 17
        type: integer
        custom: []
      order_by_column:
        name: order_by_column
        description: 'Must be one of <code>id</code>, <code>name</code>, <code>order.status</code>, or <code>created_at</code>.'
        required: false
        example: created_at
        type: string
        custom: []
      order_by_type:
        name: order_by_type
        description: 'Must be one of <code>asc</code>, <code>desc</code>, <code>ASC</code>, or <code>DESC</code>.'
        required: false
        example: asc
        type: string
        custom: []
    cleanBodyParameters:
      size: 17
      order_by_column: created_at
      order_by_type: asc
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "gcr_project_visibility": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832384",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/reorder'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Reorder Projects'
      description: 'Reorder projects of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      projects:
        name: projects
        description: 'Projects of a user'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      projects:
        - 1
        - 2
        - 3
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "gcr_project_visibility": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832384",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/order'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: "Update Project's Order"
      description: "Update project's order."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'Id of the project whose order is to be updated'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      order:
        name: order
        description: 'New order to set for the project'
        required: true
        example: 1
        type: integer
        custom: []
    cleanBodyParameters:
      order: 1
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project reorder has been successful."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to reorder project."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/share'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Share Project'
      description: 'Share the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      project: '1'
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to share project."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |-
          {
              "project": {
                  "id": 1,
                  "organization_id": 1,
                  "organization_visibility_type_id": 4,
                  "name": "The Science of Golf",
                  "description": "Uncover the science, technology, engineering, and mathematics behind the game of golf.",
                  "thumb_url": "/storage/uploads/nN5y8v8zh2ghxrKuHCv5wvJOREFw0Nr27s2DPxWq.png",
                  "shared": false,
                  "gcr_project_visibility": true,
                  "starter_project": false,
                  "order": null,
                  "status": 1,
                  "status_text": "DRAFT",
                  "indexing": null,
                  "indexing_text": "NOT REQUESTED",
                  "created_at": "2020-04-30T20:03:12.000000Z",
                  "updated_at": "2020-09-17T09:44:27.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/clone'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Clone Project'
      description: 'Clone the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: 'The Id of a user'
        required: false
        example: '1'
        type: optional
        custom: []
    cleanBodyParameters:
      user_id: '1'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project is being cloned|duplicated in background!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
            "errors": [
              "Not a Public Project."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/export'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Export Project'
      description: 'Export the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of an organization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project is being cloned|duplicated in background!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/export-noovo'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Export Noovo Project'
      description: 'Export the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project is being cloned|duplicated in background!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/import'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Import Project'
      description: 'Import the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project:
        name: project
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
    cleanBodyParameters:
      project: rerum
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project is being cloned|duplicated in background!"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/remove-share'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Remove Share Project'
      description: 'Remove share the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to remove share project."
            ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "project": {
                  "id": 1,
                  "name": "Test Project",
                  "description": "This is a test project.",
                  "thumb_url": "https://images.pexels.com/photos/2832382",
                  "shared": false,
                  "starter_project": null,
                  "is_public": true,
                  "created_at": "2020-09-06T19:21:08.000000Z",
                  "updated_at": "2020-09-06T19:21:08.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{project_id}/favorite'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Favorite/Unfavorite Project'
      description: 'Favorite/Unfavorite the specified project for a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      project_id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "This resource will be removed from your Favorites. You will no longer be able to reuse/remix its contents into your projects."
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/team-projects'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: "Get All Organization Team's Projects"
      description: "Get a list of the team's projects of an organization."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [
                  {
                      "id": 10,
                      "organization_id": 1,
                      "organization_visibility_type_id": 1,
                      "name": "project 1",
                      "description": "test  fffff  rrrr",
                      "thumb_url": "",
                      "shared": true,
                      "starter_project": false,
                      "order": 2,
                      "status": 1,
                      "status_text": "DRAFT",
                      "indexing": null,
                      "is_user_starter": false,
                      "indexing_text": "NOT REQUESTED",
                      "created_at": "2021-08-17T11:15:58.000000Z",
                      "updated_at": "2021-08-17T11:15:58.000000Z",
                      "users": [
                          {
                              "id": 1,
                              "name": "Test User",
                              "email": "test@test.com",
                              "email_verified_at": "2021-03-05T15:53:34.000000Z",
                              "created_at": null,
                              "updated_at": null,
                              "first_name": "Test",
                              "last_name": "User",
                              "organization_name": null,
                              "job_title": null,
                              "address": null,
                              "phone_number": null,
                              "organization_type": null,
                              "website": null,
                              "deleted_at": null,
                              "role": null,
                              "gapi_access_token": null,
                              "hubspot": false,
                              "subscribed": false,
                              "subscribed_ip": null,
                              "membership_type_id": 2,
                              "pivot": {
                                  "project_id": 10,
                                  "user_id": 1,
                                  "role": "owner",
                                  "created_at": "2021-08-17T11:15:58.000000Z",
                                  "updated_at": "2021-08-17T11:15:58.000000Z"
                              }
                          }
                      ],
                      "team": {
                          "id": 63,
                          "name": "Team Test One",
                          "created_at": "2021-08-17T11:15:57.000000Z",
                          "updated_at": "2021-08-17T11:15:57.000000Z",
                          "deleted_at": null,
                          "description": "desc",
                          "indexing": null,
                          "organization_id": 1,
                          "original_user": null
                      }
                  },
                  {
                      "id": 11,
                      "organization_id": 1,
                      "organization_visibility_type_id": 1,
                      "name": "The Science of Golf",
                      "description": "Uncover the science, technology, engineering, and mathematics behind the game of golf.",
                      "thumb_url": "",
                      "shared": true,
                      "starter_project": false,
                      "order": 2,
                      "status": 1,
                      "status_text": "DRAFT",
                      "indexing": null,
                      "is_user_starter": false,
                      "indexing_text": "NOT REQUESTED",
                      "created_at": "2021-08-17T11:21:09.000000Z",
                      "updated_at": "2021-08-23T17:17:46.000000Z",
                      "users": [
                          {
                              "id": 1,
                              "name": "Test User 2",
                              "email": "test2@test.com",
                              "email_verified_at": "2021-03-05T15:53:34.000000Z",
                              "created_at": null,
                              "updated_at": null,
                              "first_name": "Test",
                              "last_name": "User 2",
                              "organization_name": null,
                              "job_title": null,
                              "address": null,
                              "phone_number": null,
                              "organization_type": null,
                              "website": null,
                              "deleted_at": null,
                              "role": null,
                              "gapi_access_token": null,
                              "hubspot": false,
                              "subscribed": false,
                              "subscribed_ip": null,
                              "membership_type_id": 2,
                              "pivot": {
                                  "project_id": 11,
                                  "user_id": 1,
                                  "role": "owner",
                                  "created_at": "2021-08-17T11:21:09.000000Z",
                                  "updated_at": "2021-08-17T11:21:09.000000Z"
                              }
                          }
                      ],
                      "team": {
                          "id": 64,
                          "name": "Team 2 Test",
                          "created_at": "2021-08-17T11:21:08.000000Z",
                          "updated_at": "2021-08-17T11:21:08.000000Z",
                          "deleted_at": null,
                          "description": "desc",
                          "indexing": null,
                          "organization_id": 2,
                          "original_user": null
                      }
                  }
              ],
              "links": {
                  "first": "http://localhost:8000/api/v1/suborganization/1/team-projects?page=1",
                  "last": "http://localhost:8000/api/v1/suborganization/1/team-projects?page=1",
                  "prev": null,
                  "next": null
              },
              "meta": {
                  "current_page": 1,
                  "from": 1,
                  "last_page": 1,
                  "path": "http://localhost:8000/api/v1/suborganization/1/team-projects",
                  "per_page": 10,
                  "to": 2,
                  "total": 2
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get All Projects of login user'
      description: 'Get a list of the projects of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'Id of an organization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters:
      size:
        name: size
        description: ''
        required: false
        example: 10
        type: integer
        custom: []
      order_by_type:
        name: order_by_type
        description: ''
        required: false
        example: 'ASC OR DESC'
        type: string
        custom: []
      order_by_column8:
        name: order_by_column8
        description: ''
        required: false
        example: 'name, created_at'
        type: string
        custom: []
    cleanQueryParameters:
      size: 10
      order_by_type: 'ASC OR DESC'
      order_by_column8: 'name, created_at'
    bodyParameters:
      size:
        name: size
        description: ''
        required: false
        example: 11
        type: integer
        custom: []
      order_by_column:
        name: order_by_column
        description: 'Must be one of <code>id</code>, <code>name</code>, <code>order.status</code>, or <code>created_at</code>.'
        required: false
        example: created_at
        type: string
        custom: []
      order_by_type:
        name: order_by_type
        description: 'Must be one of <code>asc</code>, <code>desc</code>, <code>ASC</code>, or <code>DESC</code>.'
        required: false
        example: ASC
        type: string
        custom: []
    cleanBodyParameters:
      size: 11
      order_by_column: created_at
      order_by_type: ASC
    fileParameters: []
    responses:
      -
        status: 200
        content: array
        headers: []
        description: ''
        custom: []
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "gcr_project_visibility": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832384",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{id}'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get Project'
      description: 'Get the specified project detail.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      id: 62447
      project: '1'
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
              "project": {
                  "id": 1,
                  "organization_id": 1,
                  "organization_visibility_type_id": 4,
                  "name": "The Science of Golf",
                  "description": "Uncover the science, technology, engineering, and mathematics behind the game of golf.",
                  "thumb_url": "/storage/uploads/nN5y8v8zh2ghxrKuHCv5wvJOREFw0Nr27s2DPxWq.png",
                  "shared": false,
                  "gcr_project_visibility": true,
                  "starter_project": false,
                  "order": null,
                  "status": 1,
                  "status_text": "DRAFT",
                  "indexing": null,
                  "indexing_text": "NOT REQUESTED",
                  "created_at": "2020-04-30T20:03:12.000000Z",
                  "updated_at": "2020-09-17T09:44:27.000000Z"
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/suborganization/{suborganization_id}/projects/{id}'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Remove Project'
      description: 'Remove the specified project of a user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      id:
        name: id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
      project:
        name: project
        description: 'The Id of a project'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      id: 62447
      suborganization: '1'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Project has been deleted successfully."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Failed to delete project."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/suborganization/{suborganization}/projects/by-ids'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get Projects by Ids'
      description: 'Get the Projects by Ids'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization:
        name: suborganization
        description: 'The suborganization.'
        required: true
        example: illum
        type: string
        custom: []
    cleanUrlParameters:
      suborganization: illum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: Projects
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/suborganizations/{suborganization_id}/projects'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Get All Organization Projects'
      description: 'Get a list of the projects of an organization.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      suborganization_id:
        name: suborganization_id
        description: 'The ID of the suborganization.'
        required: true
        example: 63
        type: integer
        custom: []
      suborganization:
        name: suborganization
        description: 'The Id of a suborganization'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      suborganization_id: 63
      suborganization: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      query:
        name: query
        description: 'Query to search suborganization against'
        required: false
        example: Vivensity
        type: string
        custom: []
      indexing:
        name: indexing
        description: 'Indexing status of the projects'
        required: false
        example: '1'
        type: string
        custom: []
      visibility:
        name: visibility
        description: 'Visibility status of the projects'
        required: false
        example: 1
        type: integer
        custom: []
      exclude_starter:
        name: exclude_starter
        description: 'Must be one of <code>true</code>.'
        required: false
        example: 'true'
        type: string
        custom: []
      starter_project:
        name: starter_project
        description: 'Must be one of <code>true</code> or <code>false</code>.'
        required: false
        example: 'false'
        type: string
        custom: []
      shared:
        name: shared
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
      created_from:
        name: created_from
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2024-02-15'
        type: string
        custom: []
      created_to:
        name: created_to
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2024-02-15'
        type: string
        custom: []
      updated_from:
        name: updated_from
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2024-02-15'
        type: string
        custom: []
      updated_to:
        name: updated_to
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: false
        example: '2024-02-15'
        type: string
        custom: []
      author_id:
        name: author_id
        description: ''
        required: false
        example: 4
        type: integer
        custom: []
      order_by_column:
        name: order_by_column
        description: 'To sort data with specific column'
        required: false
        example: name
        type: string
        custom: []
      order_by_type:
        name: order_by_type
        description: 'To sort data in ascending or descending order'
        required: false
        example: asc
        type: string
        custom: []
      size:
        name: size
        description: 'Size to show per page records'
        required: false
        example: 10
        type: integer
        custom: []
    cleanBodyParameters:
      query: Vivensity
      indexing: '1'
      visibility: 1
      exclude_starter: 'true'
      starter_project: 'false'
      shared: false
      created_from: '2024-02-15'
      created_to: '2024-02-15'
      updated_from: '2024-02-15'
      updated_to: '2024-02-15'
      author_id: 4
      order_by_column: name
      order_by_type: asc
      size: 10
    fileParameters: []
    responses:
      -
        status: 200
        content: |
          {
              "projects": [
                  {
                      "id": 1,
                      "name": "Test Project",
                      "description": "This is a test project.",
                      "thumb_url": "https://images.pexels.com/photos/2832382",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "gcr_project_visibility": true,
                      "created_at": "2020-09-06T19:21:08.000000Z",
                      "updated_at": "2020-09-06T19:21:08.000000Z"
                  },
                  {
                      "id": 2,
                      "name": "Math Project",
                      "description": "This is a test math project.",
                      "thumb_url": "https://images.pexels.com/photos/2832384",
                      "shared": true,
                      "starter_project": null,
                      "is_public": true,
                      "created_at": "2020-09-07T19:21:08.000000Z",
                      "updated_at": "2020-09-07T19:21:08.000000Z"
                  }
              ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/projects/{project_id}/indexes/{index}'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Project Indexing'
      description: 'Modify the index value of a project.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 62447
        type: integer
        custom: []
      index:
        name: index
        description: "New Integer Index Value, 1 => 'REQUESTED', 2 => 'NOT APPROVED', 3 => 'APPROVED'."
        required: true
        example: '3'
        type: string
        custom: []
      project:
        name: project
        description: 'Project Id.'
        required: true
        example: '1'
        type: string
        custom: []
    cleanUrlParameters:
      project_id: 62447
      index: '3'
      project: '1'
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Library status changed successfully!",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Invalid index value provided."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/projects/starter/{flag}'
    metadata:
      groupName: '3. Project'
      groupDescription: |-

        APIs for project management
      subgroup: null
      subgroupDescription: null
      title: 'Starter Project Toggle'
      description: 'Toggle the starter flag of any project'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      flag:
        name: flag
        description: ''
        required: true
        example: consectetur
        type: string
        custom: []
    cleanUrlParameters:
      flag: consectetur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      projects:
        name: projects
        description: 'Projects Ids array.'
        required: true
        example:
          - 1
          - 2
          - 3
        type: 'string[]'
        custom: []
      flag:
        name: flag
        description: 'Selected projects remove or make starter.'
        required: true
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      projects:
        - 1
        - 2
        - 3
      flag: true
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Starter Projects status updated successfully!",
          }
        headers: []
        description: ''
        custom: []
      -
        status: 500
        content: |-
          {
            "errors": [
              "Choose at-least one project."
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
