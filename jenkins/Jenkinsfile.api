node("currikidev") {
    def app
    def cron
    def tests

    stage('Clone repository') {               
        checkout scm    
    }  
    stage('Deploy Helm') {	
        echo env.BRANCH_NAME
        if(env.BRANCH_NAME  == "staging") {
            echo 'Copy'
            sh 'curl https://raw.githubusercontent.com/helm/helm/v3.7.0/scripts/get-helm-3 | DESIRED_VERSION="v3.7.0" bash'
            sh """ 
            #!/bin/bash
            set -ex
            echo "${kubeconfig}" >> kubeconfig
"""
            sh 'helm upgrade --install curriki charts/curriki -f charts/staging.yaml --namespace staging --kubeconfig $(pwd config)/kubeconfig'
        } else {
            echo 'No Kubernetes deployment'
        }
    }
    
    stage('Build image') {         
        app = docker.build("quay.io/curriki/api:${env.BUILD_NUMBER}", "-f Dockerfile.8.1 .")
        cron = docker.build("quay.io/curriki/cron:${env.BUILD_NUMBER}", "-f Dockerfile.cron.8.1  --build-arg H5PBRANCH=$h5pbranch .")
    } 
    stage('Test image') {           
        app.inside { 
                sh 'echo "Api Tests passed"'        
        }    
       cron.inside { 
                sh 'echo "Cron Tests passed"'        
        }
    } 
    stage('Push image') {	
        docker.withRegistry('https://quay.io', 'docker-private-credentials') {            
                app.push("${env.BUILD_NUMBER}")            
                app.push("${tag}")
        }
        docker.withRegistry('https://quay.io', 'docker-private-credentials') {            
                cron.push("${env.BUILD_NUMBER}")            
                cron.push("${tag}")
        }
    }

    
    

    
    
    
     parallel(
            "StageA": {
                if(Jenkins.instance.getNode("${node}").toComputer().isOnline()){
                    node("${node}") {
                        stage ("${node}") {
                                sh "yes | docker service update --image quay.io/curriki/api:${tag} currikistack_currikiprod-api" 
                                sh "yes | docker service update --image quay.io/curriki/cron:${tag} currikistack_currikiprod-cron" 
                                sh "yes | docker service update --image quay.io/curriki/api:${tag} currikistack_currikiprod-migrate" 
                                sh "yes | docker service update --image quay.io/curriki/api:${tag} currikistack_currikiprod-queue" 
                                echo 'Copy completed'
                        }
                    }
                } else {
                    stage ("${node}") {
                        echo "${node} is offline"
                        exit 1
                    }
                }
            }
    )
    
}